// https://github.com/airbnb/javascript/blob/e9fff7adbf6dd4e3723c12849c407aafd429cf0f/packages/eslint-config-airbnb-base/rules/style.js#L141
// todo: once this gets merged https://github.com/prettier/prettier/issues/3847, we can enable rule "space-before-function-paren"
{
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
    "jest": true
  },
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
    "page": true,
    "browser": true,
    "context": true
  },
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "experimentalObjectRestSpread": true
    },
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "react-hooks",
    "eslint-plugin-prettier"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "eslint-config-prettier",
    "prettier"
  ],
  "overrides": [
    {
      "files": [
        "**/*.tsx"
      ],
      "rules": {
        "react/prop-types": "off"
      }
    }
  ],
  "rules": {
    "jsx-quotes": ["error", "prefer-single"],
    "react/jsx-boolean-value": "error",
    "react/jsx-closing-bracket-location": ["error", "tag-aligned"],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never" }],
//    "react/jsx-curly-newline": ["error", { "multiline": "consistent", "singleline": "consistent" }],
    "react/jsx-curly-spacing": ["error", {
      "attributes": { "when": "never" },
      "children": { "when": "never" },
      "allowMultiline": true
    }],
    "react/jsx-equals-spacing": ["error", "never"],
    "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
    "react/jsx-fragments": ["error", "syntax"],
    "react/jsx-handler-names": "error",
    "react/jsx-indent": ["error", 4, { "checkAttributes": true, "indentLogicalExpressions": true }],
    "react/jsx-indent-props": ["error", 4],
    "react/jsx-key": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": ["error", { "enforceDynamicLinks": "always" }],
    "react/jsx-no-undef": "error",
    "react/jsx-pascal-case": ["error", { "allowAllCaps": false }],
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/self-closing-comp": "error",
    "prettier/prettier": "error",
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "allow"
      }
    ],
    "react-hooks/rules-of-hooks": "error",
//    "react-hooks/exhaustive-deps": "warn",
    "space-before-function-paren": ["error", {
      "anonymous": "never",
      "named": "never",
      "asyncArrow": "never"
    }],
    "indent": [
      "warn",
      4,
      {
        "ignoreComments": true,
        "flatTernaryExpressions": true,
        "ImportDeclaration": "first",
        "ArrayExpression": 1,
        "SwitchCase": 1,
        "VariableDeclarator": {
          "var": 4,
          "let": 4,
          "const": 4
        },
        "FunctionDeclaration": {
          "parameters": 1,
          "body": 1
        },
        "FunctionExpression": {
          "parameters": 1,
          "body": 1
        },
        "ignoredNodes": [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild"
        ]
      }
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    // enforce spacing before and after comma
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    // enforce newline at the end of file, with no multiple empty lines
    "eol-last": [
      "error",
      "always"
    ],
    "semi": [
      "error",
      "always"
    ],
    "require-jsdoc": [
      "error",
      {
        "require": {
          "FunctionDeclaration": true,
          "MethodDefinition": false,
          "ClassDeclaration": false,
          "ArrowFunctionExpression": false,
          "FunctionExpression": false
        }
      }
    ],
    "no-console": [
      "error"
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "object-curly-spacing": [
      "error",
      "never"
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "no-multi-spaces": ["error"],
    "no-multiple-empty-lines": ["error"]
  }
}
